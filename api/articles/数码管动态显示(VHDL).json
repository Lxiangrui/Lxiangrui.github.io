{"title":"数码管动态显示（VHDL）","uid":"e025b4b43a23185465e9613af8a1c518","slug":"数码管动态显示(VHDL)","date":"2021-12-01T13:35:17.000Z","updated":"2021-12-19T08:23:02.761Z","comments":true,"path":"api/articles/数码管动态显示(VHDL).json","keywords":null,"cover":[],"content":"<h1 id=\"VHDL动态显示4位数码管电路\"><a href=\"#VHDL动态显示4位数码管电路\" class=\"headerlink\" title=\"VHDL动态显示4位数码管电路\"></a>VHDL动态显示4位数码管电路</h1><p>我这里的实验室通过拨码开关计数，然后通过数码管来显示，并没有对按键进行消抖处理。</p>\n<img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwww.hshxw.cn%2Fremote_pic%2Fnaps_1503469406_1.jpg&refer=http%3A%2F%2Fwww.hshxw.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1640957867&t=b1c356e3443b724f263cae18c5ec7df0\" style=\"zoom: 67%;\" />\n\n<h2 id=\"一、动态数码管是什么？\"><a href=\"#一、动态数码管是什么？\" class=\"headerlink\" title=\"一、动态数码管是什么？\"></a>一、动态数码管是什么？</h2><p>实际上很多两个以上的数码管都是动态数码管，设计成这样的真正目的是为了节约硬件资源，使用<strong>少量的引脚</strong>就可以<strong>点亮多个数码管</strong>。</p>\n<p>多位数码管的数据端口实际上只有8个口，所有数码管的数据口都是连接到一个口上面的，然后每个数码管还都会有一个片选端口，控制这位数码管的开关。</p>\n<p>所以说，所有数码管都只能显示相同的数字，或者不显示。</p>\n<p>多个数码管显示数字的时候，我们实际上是轮流点亮数码管（一个时刻内只有一个数码管是亮的），利用人眼的视觉暂留现象（也叫余辉效应），就可以做到看起来是所有数码管都同时亮了，这就是动态显示，也叫做动态扫描。</p>\n<img src=\"https://www.freesion.com/images/873/68f3c8337e37c7f44b1fcb61c9844d69.png\" style=\"zoom: 67%;\" />\n\n\n\n<h1 id=\"二、VHDL实现代码\"><a href=\"#二、VHDL实现代码\" class=\"headerlink\" title=\"二、VHDL实现代码\"></a>二、VHDL实现代码</h1><h2 id=\"1、实体部分\"><a href=\"#1、实体部分\" class=\"headerlink\" title=\"1、实体部分\"></a>1、实体部分</h2><p><strong>clk</strong>，每个FPGA板子不同的时钟源，需要查找对应的技术手册，我这里的是25MHZ，还是比较小的哈，我看网上一般都是50MHZ。</p>\n<pre class=\"line-numbers language-vhdl\" data-language=\"vhdl\"><code class=\"language-vhdl\"><span class=\"token constant\">LIBRARY</span> IEEE <span class=\"token punctuation\">;</span>\n<span class=\"token constant\">USE</span> IEEE<span class=\"token punctuation\">.</span>STD_LOGIC_1164<span class=\"token punctuation\">.</span><span class=\"token keyword\">ALL</span> <span class=\"token punctuation\">;</span>\n<span class=\"token constant\">USE</span> IEEE<span class=\"token punctuation\">.</span>STD_LOGIC_unsigned<span class=\"token punctuation\">.</span><span class=\"token keyword\">ALL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">--因为使用到了从Integer类型转换到STD_LOGIC_VECTER</span>\n<span class=\"token keyword\">ENTITY</span> shumaguan4 <span class=\"token keyword\">is</span> \n\t<span class=\"token keyword\">PORT</span>  <span class=\"token punctuation\">(</span>\n\tsegcs  <span class=\"token punctuation\">:</span> <span class=\"token keyword\">out</span> STD_LOGIC_vector <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token keyword\">DOWNTO</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">--四个数码管的片选信号，如果为0就打开</span>\n\tQ\t\t <span class=\"token punctuation\">:</span> <span class=\"token keyword\">BUFFER</span> INTEGER <span class=\"token keyword\">RANGE</span> <span class=\"token number\">0</span> <span class=\"token keyword\">TO</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span>   \t\t<span class=\"token comment\">--显示的数字</span>\n\tseg \t <span class=\"token punctuation\">:</span> <span class=\"token keyword\">out</span> STD_LOGIC_vector <span class=\"token punctuation\">(</span><span class=\"token number\">7</span> <span class=\"token keyword\">DOWNTO</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">--具体某个数码管要显示的数字</span>\n\tkey\t <span class=\"token punctuation\">:</span> <span class=\"token keyword\">in</span> STD_LOGIC<span class=\"token punctuation\">;</span>\n\tclk\t <span class=\"token punctuation\">:</span> <span class=\"token keyword\">in</span> STD_LOGIC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t \t\t<span class=\"token comment\">--25Mhz,用于提供数码管刷新频率</span>\n\t\n<span class=\"token keyword\">END</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">ARCHITECTURE</span>\tFH1\t<span class=\"token keyword\">OF</span>\t\tshumaguan4 \t<span class=\"token keyword\">IS</span>\n\t\t\n\t<span class=\"token keyword\">SIGNAL</span> num <span class=\"token punctuation\">:</span>  INTEGER <span class=\"token keyword\">RANGE</span> <span class=\"token number\">0</span> <span class=\"token keyword\">TO</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">SIGNAL</span> cnt_200Hz<span class=\"token punctuation\">:</span>  INTEGER <span class=\"token keyword\">RANGE</span> <span class=\"token number\">0</span> <span class=\"token keyword\">TO</span> <span class=\"token number\">249999</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">SIGNAL</span> segcs_SIFNAL  <span class=\"token punctuation\">:</span>  STD_LOGIC_vector <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token keyword\">DOWNTO</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token keyword\">BEGIN</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2、信号线部分\"><a href=\"#2、信号线部分\" class=\"headerlink\" title=\"2、信号线部分\"></a>2、信号线部分</h2><p>num是用来存放当前显示数码管的数字，cnt_200HZ是用来做200HZ的计数，segcs_SIFNAL是为了代替segcs定义的信号线（比较输出信号不能拿来做判断，只能拿来赋值）</p>\n<pre class=\"line-numbers language-vhdl\" data-language=\"vhdl\"><code class=\"language-vhdl\"><span class=\"token keyword\">SIGNAL</span> num <span class=\"token punctuation\">:</span>  INTEGER <span class=\"token keyword\">RANGE</span> <span class=\"token number\">0</span> <span class=\"token keyword\">TO</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SIGNAL</span> cnt_200Hz<span class=\"token punctuation\">:</span>  INTEGER <span class=\"token keyword\">RANGE</span> <span class=\"token number\">0</span> <span class=\"token keyword\">TO</span> <span class=\"token number\">249999</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SIGNAL</span> segcs_SIFNAL  <span class=\"token punctuation\">:</span>  STD_LOGIC_vector <span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token keyword\">DOWNTO</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3、计数部分\"><a href=\"#3、计数部分\" class=\"headerlink\" title=\"3、计数部分\"></a>3、计数部分</h2><pre class=\"line-numbers language-vhdl\" data-language=\"vhdl\"><code class=\"language-vhdl\">CNT<span class=\"token punctuation\">:</span>\t<span class=\"token keyword\">PROCESS</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">BEGIN</span>\n\t\t\t\t\t<span class=\"token keyword\">IF</span> key<span class=\"token keyword\">'EVENT</span> <span class=\"token operator\">AND</span> key <span class=\"token operator\">=</span> <span class=\"token number\">'1'</span> <span class=\"token keyword\">THEN</span>\n\t\t\t\t\t\t <span class=\"token keyword\">IF</span> Q<span class=\"token operator\">&lt;=</span><span class=\"token number\">9999</span> <span class=\"token keyword\">THEN</span>  Q<span class=\"token operator\">&lt;=</span>Q<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t <span class=\"token keyword\">ELSE</span> Q<span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t <span class=\"token keyword\">END</span> <span class=\"token keyword\">IF</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">END</span> <span class=\"token keyword\">IF</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">END</span> <span class=\"token keyword\">PROCESS</span>\tCNT<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4、显示部分\"><a href=\"#4、显示部分\" class=\"headerlink\" title=\"4、显示部分\"></a>4、显示部分</h2><p>因为我们切换显示数码管，这个切换的频率还是需要适当设置的，不能一直直接放到主循环里面一直高频率的执行，那样会浪费资源，但是频率</p>\n<p>太低的话，切换不过来，达不到人眼的暂留效应，显示会不是很流畅。所以我们这里选择了200hz为切换频率。</p>\n<pre class=\"line-numbers language-vhdl\" data-language=\"vhdl\"><code class=\"language-vhdl\">FF<span class=\"token punctuation\">:</span>\t<span class=\"token keyword\">PROCESS</span><span class=\"token punctuation\">(</span>clk<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">BEGIN</span>\n\t\t\t\t\t<span class=\"token keyword\">IF</span> clk<span class=\"token keyword\">'EVENT</span> <span class=\"token operator\">AND</span> clk <span class=\"token operator\">=</span> <span class=\"token number\">'1'</span> <span class=\"token keyword\">THEN</span>\n\t\t\t\t\t\t <span class=\"token keyword\">IF</span> cnt_200Hz<span class=\"token operator\">&lt;</span><span class=\"token number\">100000</span> <span class=\"token keyword\">THEN</span>  cnt_200Hz<span class=\"token operator\">&lt;=</span>cnt_200Hz<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t <span class=\"token keyword\">ELSE</span> cnt_200Hz<span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t <span class=\"token keyword\">END</span> <span class=\"token keyword\">IF</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t \n\t\t\t\t\t\t <span class=\"token keyword\">IF</span>\t\t<span class=\"token punctuation\">(</span>cnt_200Hz<span class=\"token operator\">&lt;=</span><span class=\"token number\">25000</span><span class=\"token punctuation\">)</span>\t\t\t\t<span class=\"token keyword\">THEN</span>\tsegcs_SIFNAL <span class=\"token operator\">&lt;=</span> <span class=\"token vhdl-vectors number\">\"1110\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t <span class=\"token keyword\">ELSIF</span> \t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">25000</span><span class=\"token operator\">&lt;</span>cnt_200Hz<span class=\"token punctuation\">)</span><span class=\"token function\">AND</span><span class=\"token punctuation\">(</span>cnt_200Hz<span class=\"token operator\">&lt;=</span><span class=\"token number\">50000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token keyword\">THEN</span>\tsegcs_SIFNAL <span class=\"token operator\">&lt;=</span> <span class=\"token vhdl-vectors number\">\"1101\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t <span class=\"token keyword\">ELSIF</span>\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">50000</span><span class=\"token operator\">&lt;</span>cnt_200Hz<span class=\"token punctuation\">)</span><span class=\"token function\">AND</span><span class=\"token punctuation\">(</span>cnt_200Hz<span class=\"token operator\">&lt;=</span><span class=\"token number\">75000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token keyword\">THEN</span>\tsegcs_SIFNAL <span class=\"token operator\">&lt;=</span> <span class=\"token vhdl-vectors number\">\"1011\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t <span class=\"token keyword\">ELSE</span> \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsegcs_SIFNAL <span class=\"token operator\">&lt;=</span> <span class=\"token vhdl-vectors number\">\"0111\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t <span class=\"token keyword\">END</span> <span class=\"token keyword\">IF</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t \n\t\t\t\t\t<span class=\"token keyword\">END</span> <span class=\"token keyword\">IF</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\n\t\t<span class=\"token keyword\">END</span> <span class=\"token keyword\">PROCESS</span>\tFF<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>我是废物，这个只是为了给自己一个总结哈，我还只是一个小菜鸡儿。</p>\n","text":"VHDL动态显示4位数码管电路我这里的实验室通过拨码开关计数，然后通过数码管来显示，并没有对按键进行消抖处理。 一、动态数码管是什么？实际上很多两个以上的数码管都是动态数码管，设计成这样的真正目的是为了节约硬件资源，使用少量的引脚就可以点亮多个数码管。 多位数码管的数据端口实际上...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"课程学习","slug":"课程学习","count":6,"path":"api/categories/课程学习.json"}],"tags":[{"name":"FPGA","slug":"FPGA","count":2,"path":"api/tags/FPGA.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#VHDL%E5%8A%A8%E6%80%81%E6%98%BE%E7%A4%BA4%E4%BD%8D%E6%95%B0%E7%A0%81%E7%AE%A1%E7%94%B5%E8%B7%AF\"><span class=\"toc-text\">VHDL动态显示4位数码管电路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%8A%A8%E6%80%81%E6%95%B0%E7%A0%81%E7%AE%A1%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">一、动态数码管是什么？</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81VHDL%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">二、VHDL实现代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%AE%9E%E4%BD%93%E9%83%A8%E5%88%86\"><span class=\"toc-text\">1、实体部分</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E4%BF%A1%E5%8F%B7%E7%BA%BF%E9%83%A8%E5%88%86\"><span class=\"toc-text\">2、信号线部分</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E8%AE%A1%E6%95%B0%E9%83%A8%E5%88%86\"><span class=\"toc-text\">3、计数部分</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E6%98%BE%E7%A4%BA%E9%83%A8%E5%88%86\"><span class=\"toc-text\">4、显示部分</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li></ol></li></ol>","author":{"name":"祥瑞","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/04/08/L9tIA0.jpg","link":"/","description":"励志成为野生钢铁侠-稚晖君的小弟 <br /> @ <b>B站：电工渣</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"十一届蓝桥杯嵌入式省赛","uid":"e9d1803706b9032e2ca68eddf6b43194","slug":"十一届蓝桥杯嵌入式省赛","date":"2021-12-04T07:49:03.000Z","updated":"2022-04-09T09:25:48.616Z","comments":true,"path":"api/articles/十一届蓝桥杯嵌入式省赛.json","keywords":null,"cover":"https://z3.ax1x.com/2021/11/22/IzTdmR.jpg","text":"前言由于本人乃菜鸡，而且这个项目只是我拿来给自己练习的，所以并没有想过做教学使用，大家可以参考一下，如果各位大佬垂阅，可以给出一下建议，我将不甚感激。 之前些32代码都是全部放到main.c里面，这次是第一次把主要的程序都放到其他.c中，然后调用，这样逻辑是会比较清晰的，而且以后...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"比赛项目","slug":"比赛项目","count":3,"path":"api/categories/比赛项目.json"}],"tags":[{"name":"stm32","slug":"stm32","count":2,"path":"api/tags/stm32.json"}],"author":{"name":"祥瑞","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/04/08/L9tIA0.jpg","link":"/","description":"励志成为野生钢铁侠-稚晖君的小弟 <br /> @ <b>B站：电工渣</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"EDA课程学习","uid":"3aa30f86d5e7a5fe52d49f283f39878f","slug":"EDA课程学习","date":"2021-11-29T10:31:08.000Z","updated":"2022-01-03T14:29:31.298Z","comments":true,"path":"api/articles/EDA课程学习.json","keywords":null,"cover":[],"text":"EDA课程学习这个篇博客主要是我在完成我的EDA课程在学习通上面的章节练习时，做的笔记。 (这个脑图是老师提高的哈，非常耐撕！) 记忆宫殿 英文 中文 ISP 在系统编程 LUT（Look-Up-Table） 查找表 LAB 逻辑阵列块 FPGA 现场可编程逻辑门阵列 OTP 一...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"课程学习","slug":"课程学习","count":6,"path":"api/categories/课程学习.json"}],"tags":[{"name":"FPGA","slug":"FPGA","count":2,"path":"api/tags/FPGA.json"}],"author":{"name":"祥瑞","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/04/08/L9tIA0.jpg","link":"/","description":"励志成为野生钢铁侠-稚晖君的小弟 <br /> @ <b>B站：电工渣</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}