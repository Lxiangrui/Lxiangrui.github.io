{"title":"微机原理与接口技术复习笔记","uid":"c7c7d3f34d67a88be91b6acae917b627","slug":"微机原理与接口技术复习笔记","date":"2021-12-19T08:15:17.000Z","updated":"2022-01-03T09:19:29.533Z","comments":true,"path":"api/articles/微机原理与接口技术复习笔记.json","keywords":null,"cover":[],"content":"<p>OK，这是在大三上学期的期末时，写的复习笔记，现在距离考试还有10天左右的时间，我得在这十天内把这学期学习的课程知识全部过一遍，并练一些编程题目。</p>\n<p>先把沈老师分享的脑图，记录一下</p>\n<h1 id=\"脑图大纲\"><a href=\"#脑图大纲\" class=\"headerlink\" title=\"脑图大纲\"></a>脑图大纲</h1><img src=\"https://s4.ax1x.com/2021/12/19/TeFbvV.md.png\" alt=\"TeFbvV.md.png\" style=\"zoom:200%;\" />\n\n<p>这图上面除了右边的具体知识，还有左上角的tips，<strong>怎么学？</strong> </p>\n<p>这是一个很重要的问题，有些时候，虽然我也想认真听课，但是，就是不知道怎么回事就开始出神了，当老师突然把我惊得反应回来，蓦然回首,<strong>我是谁？，我在哪儿？我在干什么？</strong>，这是一方面，上课没有很认真地听课；然后我觉得可能还有一点，就是没有进行大量地读写程序，汇编语言还是有一些语句地，需要去<strong>练习</strong>记忆。这也就对应了沈老师在图地左上方写到的怎么学：<strong>“大量地读写程序”</strong>，当然这最好建立在<strong>“理解””记忆“</strong>一些地基础上，不然会有些吃力。</p>\n<ol>\n<li><p>如何进行改述和总结，用你自己的话，尽可能简短地来表述作者的意思。</p>\n</li>\n<li><p>如何进行改述和总结，用你自己的话，尽可能简短地来表述作者的意思。</p>\n</li>\n<li><p>使用图表来说明， 尽可能多地将信息转化成符号或者图表。</p>\n</li>\n<li><p>为知识点创造记忆方法，试着为自己出试题 。</p>\n<p>好像可能会不会跟着做但是还是记录一下吧，终归还是要一个目标的。🙂</p>\n</li>\n</ol>\n<p>我大致计划，每看玩一个知识章节，自己去总结到这篇博客上，并且做相关练习都贴到这里。</p>\n<h1 id=\"程序标配：\"><a href=\"#程序标配：\" class=\"headerlink\" title=\"程序标配：\"></a>程序标配：</h1><pre class=\"line-numbers language-assembly\" data-language=\"assembly\"><code class=\"language-assembly\">code segement\nassume cs:code\nstart: \n;;你写的代码\ncode ends\n\tend\tstart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"一、计算机基础知识\"><a href=\"#一、计算机基础知识\" class=\"headerlink\" title=\"一、计算机基础知识\"></a>一、计算机基础知识</h1><h2 id=\"1、数据表达式\"><a href=\"#1、数据表达式\" class=\"headerlink\" title=\"1、数据表达式\"></a>1、数据表达式</h2><h3 id=\"补码：\"><a href=\"#补码：\" class=\"headerlink\" title=\"补码：\"></a>补码：</h3><p>[相关脑图](<a href=\"https://naotu.baidu.com/file/67d3f34a8505be2f42a55566c766bea5\">数值 - 百度脑图 (baidu.com)</a>)</p>\n<p>重点：负数的补码求法：（因为正数的补码反码都和原码一样，所以不用特别记忆）</p>\n<p>​            先将它化为二进制数，也就是求到它的原码，然后符号位不变，数值位全部取反，最后加上“1”，就得到的它的补码。</p>\n<p>例如：求-50的补码</p>\n<p><strong>方法一：</strong></p>\n<ol>\n<li>-50的原码是50的原码的基础上，符号位为“1”，也就是0011 0010，这里使用8位数的原因是“计算机中的内存单元，一个直接有8为二进制”，所以-50的原码为：1011 0010</li>\n<li>符号位不变，数值位取反得到：1100 1101</li>\n<li>在上面的基础上加一，得到最后的结果为：<strong>1100 1110</strong></li>\n</ol>\n<p><strong>方法二：</strong></p>\n<p>​        得到原码后，找到为1的最低位，然后将这一位到符号位的所有位全部取反，就可以得到，负数的补码了。</p>\n<p>例如：-50的原码    1011 0010，去符号位到最低的为“1”的位中间的位全部取反后得到：<strong>1100 1110</strong>。</p>\n<p>着两种方法都是可行的，当然第二种方法好是要简单一点哈。</p>\n<h3 id=\"常用编码：\"><a href=\"#常用编码：\" class=\"headerlink\" title=\"常用编码：\"></a>常用编码：</h3><table>\n<thead>\n<tr>\n<th>编码名称</th>\n<th>例子</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ASCII码</td>\n<td>40代表0</td>\n<td>使数字和字符能够在计算机中存储</td>\n</tr>\n<tr>\n<td>8421BCD码</td>\n<td>0000代表0</td>\n<td>计算机把十进制数转换成二进制数就要用到一种转换码，BCD码就是其中的一种。</td>\n</tr>\n</tbody></table>\n<h3 id=\"进制转换：\"><a href=\"#进制转换：\" class=\"headerlink\" title=\"进制转换：\"></a>进制转换：</h3><p>十进制小数转化为二进制</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>作用</th>\n<th>用法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>乘2法</td>\n<td>十进制小数化二进制</td>\n<td>乘2取整，顺序排列</td>\n</tr>\n<tr>\n<td>除2发</td>\n<td>十进制整数化二进制</td>\n<td>整数部分 除以2取余，逆序排列。</td>\n</tr>\n</tbody></table>\n<p>例如：13.2化为二进制小数</p>\n<p>先求小数部分：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token number\">0.2</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.4</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token number\">0</span>\n<span class=\"token number\">0.4</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token number\">0</span>\n<span class=\"token number\">0.8</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.6</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token number\">1</span>\n<span class=\"token number\">0.6</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.2</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token number\">1</span>\n<span class=\"token number\">0.2</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.4</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token number\">0</span>\n<span class=\"token number\">0.3</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token number\">0</span>\n<span class=\"token number\">0.8</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.6</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token number\">1</span>\n<span class=\"token number\">0.6</span><span class=\"token operator\">*</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.2</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token number\">1</span>\n    直到小数部分为<span class=\"token number\">0</span>，或者发现是循环数\n    所以小数部分为：<span class=\"token number\">0.0011</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>整数部分：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token number\">13</span><span class=\"token operator\">/</span><span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span>余<span class=\"token number\">1</span>\n<span class=\"token number\">6</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>  <span class=\"token operator\">=</span> <span class=\"token number\">3</span>余<span class=\"token number\">0</span>\n<span class=\"token number\">3</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>  <span class=\"token operator\">=</span> <span class=\"token number\">1</span>余<span class=\"token number\">1</span>\n<span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>  <span class=\"token operator\">=</span> <span class=\"token number\">0</span>余<span class=\"token number\">1</span>\n \t直达整数部分为<span class=\"token number\">0</span>\n    所以整数部分为：<span class=\"token number\">1011</span>，其实我更倾向于自己去比较<span class=\"token number\">2</span>的几次方，得出来。。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"2、存储与寻址\"><a href=\"#2、存储与寻址\" class=\"headerlink\" title=\"2、存储与寻址\"></a>2、存储与寻址</h2><h3 id=\"地址表示：\"><a href=\"#地址表示：\" class=\"headerlink\" title=\"地址表示：\"></a>地址表示：</h3><table>\n<thead>\n<tr>\n<th>物理地址</th>\n<th>对于一个存储单元来说，它的物理地址是唯一的</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>逻辑地址</td>\n<td>对于一个存储单元开始，它的逻辑地址是无数组，不同段基址和对于的偏移地址可以形成同一个物理地址</td>\n</tr>\n</tbody></table>\n<p>$$<br>物理地址 = 段地址 *10H + 偏移地址<br>$$</p>\n<p>段地址（段基址）的英文简称：<strong>DS</strong></p>\n<p>偏移地址（有效地址,段内地址）的英文简称：<strong>EA</strong></p>\n<h3 id=\"寻址方式：\"><a href=\"#寻址方式：\" class=\"headerlink\" title=\"寻址方式：\"></a>寻址方式：</h3><ol>\n<li><p>段寄存器</p>\n<table>\n<thead>\n<tr>\n<th>有无BP</th>\n<th>段寄存器</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>有</td>\n<td>SS</td>\n</tr>\n<tr>\n<td>无</td>\n<td>DS</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>寻址类型</p>\n<table>\n<thead>\n<tr>\n<th>寻址方式（源）</th>\n<th>格式</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>立即寻址</td>\n<td>MOV AX,100H</td>\n<td>直接是一个常数数值</td>\n</tr>\n<tr>\n<td>寄存器寻址</td>\n<td>MOV BX,AX</td>\n<td>指令所需要的操作数在寄存器中</td>\n</tr>\n<tr>\n<td>直接寻址</td>\n<td>MOV AX,[100H]</td>\n<td>有一个中括号，里面是常数的偏移地址</td>\n</tr>\n<tr>\n<td>寄存器间接寻址</td>\n<td>MOV BX,[AX]</td>\n<td>有一个中括号，里面是寄存器</td>\n</tr>\n<tr>\n<td>寄存器相对寻址</td>\n<td>MOV AX，100H[SI]</td>\n<td>在寄存器间接寻址的基础上，加了一个常数</td>\n</tr>\n<tr>\n<td>基址加变址寻址</td>\n<td>MOV AL，[BX][SI]</td>\n<td>有两个寄存器</td>\n</tr>\n<tr>\n<td>相对基址加变址寻址</td>\n<td>MOVAL,[BX][SI]100H</td>\n<td>基址加变址寻址,加上一个常数</td>\n</tr>\n</tbody></table>\n<p>3、变址寄存器和基址寄存器</p>\n<table>\n<thead>\n<tr>\n<th>变址寄存器</th>\n<th>SI          DI</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>基址寄存器</td>\n<td>BX         BP</td>\n</tr>\n</tbody></table>\n<p>PS(容易错的题):</p>\n<p>MOV AL,DS:[1000]的源操作数是直接寻址</p>\n<p>MOV AL,DS,的源操作数是寄存器寻址</p>\n<p>MOV DS:[BP],AL    的目的操作数是寄存器间接寻址</p>\n<p>每个段最多有<strong>64kb</strong>，CS是<strong>代码段寄存器</strong>，IP是<strong>指令指针</strong>用于指向将要执行的指令。 </p>\n<p>已知一逻辑地址为：3000：1000，其段起始地址为：30000H</p>\n</li>\n</ol>\n<h2 id=\"3、寄存器\"><a href=\"#3、寄存器\" class=\"headerlink\" title=\"3、寄存器\"></a>3、寄存器</h2><table>\n<thead>\n<tr>\n<th>AX</th>\n<th>累加器</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BX</td>\n<td>基址寄存器</td>\n</tr>\n<tr>\n<td>CX</td>\n<td>计数寄存器</td>\n</tr>\n<tr>\n<td>DX</td>\n<td>数据寄存器</td>\n</tr>\n<tr>\n<td>CS</td>\n<td>代码段寄存器</td>\n</tr>\n<tr>\n<td>DS</td>\n<td>数据段寄存器</td>\n</tr>\n<tr>\n<td>SS</td>\n<td>堆栈段寄存器</td>\n</tr>\n<tr>\n<td>ES</td>\n<td>附加段寄存器</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>BP</th>\n<th>基址指针</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SP</td>\n<td>堆栈指针</td>\n</tr>\n<tr>\n<td>SI</td>\n<td>源  变址寄存器</td>\n</tr>\n<tr>\n<td>DI</td>\n<td>目的   变址寄存器</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>IP</th>\n<th>指令指针</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>FR</td>\n<td>标志寄存器</td>\n</tr>\n</tbody></table>\n<h1 id=\"二、汇编语言\"><a href=\"#二、汇编语言\" class=\"headerlink\" title=\"二、汇编语言\"></a>二、汇编语言</h1><h2 id=\"1、数据传送指令\"><a href=\"#1、数据传送指令\" class=\"headerlink\" title=\"1、数据传送指令\"></a>1、数据传送指令</h2><h4 id=\"MOV\"><a href=\"#MOV\" class=\"headerlink\" title=\"MOV\"></a>MOV</h4><p>1、立即数不能向段寄存器赋值；</p>\n<p>2、只有通用寄存器能对调用寄存器赋值，也就是存储里面的数不能向存储器里面的数赋值，段寄存器也不能向段寄存器赋值。</p>\n<p>3、cs不能作为目的操作数</p>\n<p>4、两个操作数，至少有一个确定类型，立即数和存储器的数据类型都是不确定的。比如需要把一个存储数传到另一个存储器中，这个情况下可以先把源操作数传给寄存器，然后再传给目的操作数；或者采用语句指明源操作数或者目的操作数是字类型还是字节类型。</p>\n<p>限定为字节类型：    byte PTR ds:[1006h],01H                byte（字节）读音[baɪt]，bit（二进制位）</p>\n<p>限定为字类型：    WORD PTR ds:[1006h],01H</p>\n<h4 id=\"LEA\"><a href=\"#LEA\" class=\"headerlink\" title=\"LEA\"></a>LEA</h4><p>将源操作数的偏移地址赋值给寄存器,所以目的操作数是16位寄存器。</p>\n<h4 id=\"POP-PUSH\"><a href=\"#POP-PUSH\" class=\"headerlink\" title=\"POP  PUSH\"></a>POP  PUSH</h4><p>push后SP-2,pop后SP+2。</p>\n<p>栈底是高位。</p>\n<h4 id=\"XCHG\"><a href=\"#XCHG\" class=\"headerlink\" title=\"XCHG\"></a>XCHG</h4><p>交换两个寄存器里面的值。不影响寄存器。</p>\n<h2 id=\"2、运算指令\"><a href=\"#2、运算指令\" class=\"headerlink\" title=\"2、运算指令\"></a>2、运算指令</h2><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>作用</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ADD</td>\n<td>加法，不带进位</td>\n<td>ADD AX,BX</td>\n</tr>\n<tr>\n<td>ADC</td>\n<td>加法，带进位</td>\n<td>ADC AX,CX</td>\n</tr>\n<tr>\n<td>INC</td>\n<td>加一，不影响CF</td>\n<td>INC AX</td>\n</tr>\n<tr>\n<td>SUB</td>\n<td>减法，不带借位</td>\n<td>SUB AX,BX</td>\n</tr>\n<tr>\n<td>SBB</td>\n<td>减法，带借位</td>\n<td>SBB AX,BX</td>\n</tr>\n<tr>\n<td>DEC</td>\n<td>减一，不影响CF</td>\n<td>DEC AX</td>\n</tr>\n<tr>\n<td>CMP</td>\n<td>比较</td>\n<td>CMP AX,BX</td>\n</tr>\n<tr>\n<td>NEG</td>\n<td>求补</td>\n<td>NEG AX</td>\n</tr>\n</tbody></table>\n<h2 id=\"DAA\"><a href=\"#DAA\" class=\"headerlink\" title=\"DAA:\"></a>DAA:</h2><p>压缩BCD码，个位数放入AL的低四位，十位数放入AL的高四位</p>\n<h2 id=\"AAA\"><a href=\"#AAA\" class=\"headerlink\" title=\"AAA:\"></a>AAA:</h2><p>将两个加数从ASCII码还原为十进制，然后相加，得到的数，将其高位放入AH中，低位放入AL中。</p>\n<h2 id=\"3、程序流程控制指令\"><a href=\"#3、程序流程控制指令\" class=\"headerlink\" title=\"3、程序流程控制指令\"></a>3、程序流程控制指令</h2><h3 id=\"条件跳转指令\"><a href=\"#条件跳转指令\" class=\"headerlink\" title=\"条件跳转指令\"></a>条件跳转指令</h3><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>JZ</td>\n<td>ZF为’1’的时候跳转</td>\n</tr>\n<tr>\n<td>JNZ</td>\n<td>ZF为’0’的时候跳转</td>\n</tr>\n<tr>\n<td>JC</td>\n<td>CF为’1’的时候跳转</td>\n</tr>\n<tr>\n<td>JNC</td>\n<td>CF为‘0’的时候跳转</td>\n</tr>\n<tr>\n<td>JMP</td>\n<td>无条件跳转</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>无符号整数运算</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>JA/JNBE</td>\n<td>大于跳转</td>\n</tr>\n<tr>\n<td>JAE/JNB</td>\n<td>大于或等于跳转</td>\n</tr>\n<tr>\n<td>JB/JNAE</td>\n<td>小于跳转</td>\n</tr>\n<tr>\n<td>JBE/JNA</td>\n<td>小于或等于跳转</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>有符号整数运算</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>JG/JNLE</td>\n<td>大于跳转</td>\n</tr>\n<tr>\n<td>JGE/JNL</td>\n<td>大于或等于跳转</td>\n</tr>\n<tr>\n<td>JL/JNGE</td>\n<td>小于跳转</td>\n</tr>\n<tr>\n<td><a href=\"https://baike.baidu.com/item/JLE\">JLE</a>/JNG</td>\n<td>小于或等于的关于跳转</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>循环控制指令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>LOOP</td>\n<td>CX 不为‘0‘时，</td>\n</tr>\n</tbody></table>\n<h2 id=\"4、逻辑运算与位操作\"><a href=\"#4、逻辑运算与位操作\" class=\"headerlink\" title=\"4、逻辑运算与位操作\"></a>4、逻辑运算与位操作</h2><h3 id=\"逻辑运算指令\"><a href=\"#逻辑运算指令\" class=\"headerlink\" title=\"逻辑运算指令\"></a>逻辑运算指令</h3><table>\n<thead>\n<tr>\n<th>指令名称</th>\n<th>作用</th>\n<th>用法</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>NOT</td>\n<td>取反</td>\n<td></td>\n</tr>\n<tr>\n<td>AND</td>\n<td>与</td>\n<td></td>\n</tr>\n<tr>\n<td>XOR</td>\n<td>异或</td>\n<td></td>\n</tr>\n<tr>\n<td>NXOR</td>\n<td>同或</td>\n<td></td>\n</tr>\n<tr>\n<td>TEST</td>\n<td>测试</td>\n<td></td>\n</tr>\n<tr>\n<td>OR</td>\n<td>或</td>\n<td></td>\n</tr>\n<tr>\n<td>运算指令后</td>\n<td>CF=OF=0,SF,ZF按一般规则影响</td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"移位指令\"><a href=\"#移位指令\" class=\"headerlink\" title=\"移位指令\"></a>移位指令</h3><table>\n<thead>\n<tr>\n<th>指令名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SHL_SHR逻辑</td>\n<td>把‘0’移入，移出到CF</td>\n</tr>\n<tr>\n<td>SAL_SAR算术</td>\n<td>左移时，低位补0；右移时，高位补符号位</td>\n</tr>\n<tr>\n<td>ROL_ROR不带进位循环</td>\n<td>移出的位要放入cf的同时，也要放入空位</td>\n</tr>\n<tr>\n<td>RCL_RCR带进位循环</td>\n<td>空位放入CF的值，CF放入移出的值。</td>\n</tr>\n</tbody></table>\n<h1 id=\"三、接口技术\"><a href=\"#三、接口技术\" class=\"headerlink\" title=\"三、接口技术\"></a>三、接口技术</h1><h2 id=\"1、总线与时序\"><a href=\"#1、总线与时序\" class=\"headerlink\" title=\"1、总线与时序\"></a>1、总线与时序</h2><table>\n<thead>\n<tr>\n<th>时钟周期</th>\n<th>CPU执行的最小时间单位</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>总线周期</td>\n<td>4倍时钟周期</td>\n</tr>\n<tr>\n<td>指令周期</td>\n<td>CPU执行一条指令所需要的时间，不同指令t不一样，同一条指令寻址方式不一样，时间也不一样</td>\n</tr>\n</tbody></table>\n<h2 id=\"2、8085-A1、A0：端口选择信号输入引脚\"><a href=\"#2、8085-A1、A0：端口选择信号输入引脚\" class=\"headerlink\" title=\"2、8085-A1、A0：端口选择信号输入引脚\"></a>2、8085-A1、A0：端口选择信号输入引脚</h2><table>\n<thead>\n<tr>\n<th>A1</th>\n<th>A0</th>\n<th>操作</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>0</td>\n<td>0</td>\n<td>A口读或写</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>B口读或写</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>C口读或写</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"3、内部结构\"><a href=\"#3、内部结构\" class=\"headerlink\" title=\"3、内部结构\"></a>3、内部结构</h2><p>由EU（执行单元）和BIU（总线接口部件）组成。</p>\n<table>\n<thead>\n<tr>\n<th>EU</th>\n<th>通用寄存器、SP,BP,SI,DI这四个与地址相关的寄存器以及ALU（运算逻辑单元）、标志寄存器。。</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BIU</td>\n<td>段寄存器、IP。。。</td>\n</tr>\n</tbody></table>\n<h2 id=\"8255控制字：\"><a href=\"#8255控制字：\" class=\"headerlink\" title=\"8255控制字：\"></a>8255控制字：</h2><h2 id=\"8254控制字：\"><a href=\"#8254控制字：\" class=\"headerlink\" title=\"8254控制字：\"></a>8254控制字：</h2><h1 id=\"错题集：\"><a href=\"#错题集：\" class=\"headerlink\" title=\"错题集：\"></a>错题集：</h1><ol>\n<li><p>计算机有运算器、控制器、存储器和输入、输出五部分组成。</p>\n</li>\n<li><p>IP存放指令的偏移地址</p>\n</li>\n<li><p>总线接口部件BIU</p>\n</li>\n<li><p>(单选题)以下哪个地址不可能是段起始地址  • A. 10h • B. 1000h • C. 11111h • D. 21000h 正确答案: </p>\n<p>（段起始地址的低四位必须是‘0’）</p>\n</li>\n<li><p>16位寄存器一个有14个</p>\n</li>\n<li><p>8086 不能出现在指令中的寄存器有2个，是IP和FR（标志寄存器）</p>\n</li>\n<li><p>8086 中用于存放偏移地址的寄存器有<strong>BX BP SI DI</strong>  ,  IP SP一共6个,但是能出现在[]中的只有前 4 个</p>\n</li>\n<li><p>0的8位补码是0000  0000 B</p>\n</li>\n<li><p>字长是作为一个整体计算机一次最多可传送或运算的二进制位数</p>\n</li>\n<li><p>一个指令周期包括几个机器周期,一个机器周期包括几个时钟周期。</p>\n</li>\n<li><p>8086 地址累加器的位数是20位</p>\n</li>\n<li><p>CPU 中运算器的功能主要是算术运算和逻辑运算</p>\n</li>\n<li><p>8086 CPU 寄存器中,能在 I/O 寻址时用作地址寄存器的 是DX</p>\n</li>\n<li><p>MOV AX,3000H，数据从代码段里面取出</p>\n</li>\n<li><p>假定(SS)=2000H,(SP)=0100H,(AX)=2107H,执行指令 PUSH AX 后,存放数据 21H 的物理地址是200FF。</p>\n</li>\n<li><p>从 PC3 输出一低电平置位复位控制字是<strong>6h</strong></p>\n</li>\n<li><p>从 PC6 输出一高电平置位复位控制字是ODH</p>\n</li>\n<li><p>8255 有2个8位并行输入/输出端口,分为2组</p>\n</li>\n<li><p>如果 8254 的输入信号是 1MHZ，从计数器 2 输出是 20HZ 周期性负脉冲，端口地址为 300H-303H 控制字是0B4H</p>\n</li>\n<li><p>按键控制指示灯程序工作方式字是90h未使用的端口都 设为输出</p>\n</li>\n<li><p>FLAG是标志寄存器，里面存放的CF,AF,OF,ZF啥的，它不能出现在指令中。</p>\n</li>\n<li><p>查表指令XLAT,将存储在DS:[BX+AL]的数赋值给AL，没有操作数</p>\n</li>\n<li><p><strong>一些传送指令会影响状态标志位！！！！</strong></p>\n</li>\n<li><p>CF 判断的是无符号数、OF 判断的是符号数。</p>\n</li>\n<li><p>A口可工作于方式0、方式1和方式2中的任一种<br>B口可工作于方式0和方式1，但不能工作于方式2<br>C口只能工作于方式0</p>\n</li>\n<li><p>向 8254A 芯片中写入的计数初值,是写入<strong>初值寄存器</strong></p>\n</li>\n<li><p>CS:IP是程序的起始地址</p>\n</li>\n</ol>\n","text":"OK，这是在大三上学期的期末时，写的复习笔记，现在距离考试还有10天左右的时间，我得在这十天内把这学期学习的课程知识全部过一遍，并练一些编程题目。 先把沈老师分享的脑图，记录一下 脑图大纲 这图上面除了右边的具体知识，还有左上角的tips，怎么学？ 这是一个很重要的问题，有些时候...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"课程学习","slug":"课程学习","count":6,"path":"api/categories/课程学习.json"}],"tags":[{"name":"汇编","slug":"汇编","count":2,"path":"api/tags/汇编.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%84%91%E5%9B%BE%E5%A4%A7%E7%BA%B2\"><span class=\"toc-text\">脑图大纲</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E6%A0%87%E9%85%8D%EF%BC%9A\"><span class=\"toc-text\">程序标配：</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">一、计算机基础知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%95%B0%E6%8D%AE%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">1、数据表达式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A1%A5%E7%A0%81%EF%BC%9A\"><span class=\"toc-text\">补码：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E7%BC%96%E7%A0%81%EF%BC%9A\"><span class=\"toc-text\">常用编码：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%EF%BC%9A\"><span class=\"toc-text\">进制转换：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%AD%98%E5%82%A8%E4%B8%8E%E5%AF%BB%E5%9D%80\"><span class=\"toc-text\">2、存储与寻址</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%B0%E5%9D%80%E8%A1%A8%E7%A4%BA%EF%BC%9A\"><span class=\"toc-text\">地址表示：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%BB%E5%9D%80%E6%96%B9%E5%BC%8F%EF%BC%9A\"><span class=\"toc-text\">寻址方式：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%AF%84%E5%AD%98%E5%99%A8\"><span class=\"toc-text\">3、寄存器</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">二、汇编语言</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%95%B0%E6%8D%AE%E4%BC%A0%E9%80%81%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">1、数据传送指令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#MOV\"><span class=\"toc-text\">MOV</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#LEA\"><span class=\"toc-text\">LEA</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#POP-PUSH\"><span class=\"toc-text\">POP  PUSH</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#XCHG\"><span class=\"toc-text\">XCHG</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E8%BF%90%E7%AE%97%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">2、运算指令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#DAA\"><span class=\"toc-text\">DAA:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#AAA\"><span class=\"toc-text\">AAA:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E7%A8%8B%E5%BA%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">3、程序流程控制指令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6%E8%B7%B3%E8%BD%AC%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">条件跳转指令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E4%B8%8E%E4%BD%8D%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">4、逻辑运算与位操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">逻辑运算指令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A7%BB%E4%BD%8D%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">移位指令</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%8E%A5%E5%8F%A3%E6%8A%80%E6%9C%AF\"><span class=\"toc-text\">三、接口技术</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%80%BB%E7%BA%BF%E4%B8%8E%E6%97%B6%E5%BA%8F\"><span class=\"toc-text\">1、总线与时序</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%818085-A1%E3%80%81A0%EF%BC%9A%E7%AB%AF%E5%8F%A3%E9%80%89%E6%8B%A9%E4%BF%A1%E5%8F%B7%E8%BE%93%E5%85%A5%E5%BC%95%E8%84%9A\"><span class=\"toc-text\">2、8085-A1、A0：端口选择信号输入引脚</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%86%85%E9%83%A8%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">3、内部结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8255%E6%8E%A7%E5%88%B6%E5%AD%97%EF%BC%9A\"><span class=\"toc-text\">8255控制字：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8254%E6%8E%A7%E5%88%B6%E5%AD%97%EF%BC%9A\"><span class=\"toc-text\">8254控制字：</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%94%99%E9%A2%98%E9%9B%86%EF%BC%9A\"><span class=\"toc-text\">错题集：</span></a></li></ol>","author":{"name":"祥瑞","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/04/08/L9tIA0.jpg","link":"/","description":"励志成为野生钢铁侠-稚晖君的小弟 <br /> @ <b>B站：电工渣</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"通信原理","uid":"a62551fd56e2837b6f4afeba433d6170","slug":"通信原理","date":"2021-12-20T12:19:42.000Z","updated":"2021-12-20T13:20:08.805Z","comments":true,"path":"api/articles/通信原理.json","keywords":null,"cover":[],"text":"&lt;&lt;现代通信原理&gt;&gt;，是我在大三上学期学习的课程，因为想混git的小绿点，以及记录一下，所以把复习（学习）笔记，上传到blog上面来了。 🙂🙂🙂🙂🙂🙂 现代通信原理 根据学习通上老师设置的章节，可分为 绪论、通信系统中的信号信道和噪声、模拟调制系统、差错控...","link":"","photos":[],"count_time":{"symbolsCount":618,"symbolsTime":"1 mins."},"categories":[{"name":"课程学习","slug":"课程学习","count":6,"path":"api/categories/课程学习.json"}],"tags":[{"name":"信号","slug":"信号","count":1,"path":"api/tags/信号.json"}],"author":{"name":"祥瑞","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/04/08/L9tIA0.jpg","link":"/","description":"励志成为野生钢铁侠-稚晖君的小弟 <br /> @ <b>B站：电工渣</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"C_answer","uid":"5ff3ed1096e2d71cb98e6d4ddf0126cd","slug":"C-answer","date":"2021-12-17T04:47:05.000Z","updated":"2021-12-17T12:49:30.432Z","comments":true,"path":"api/articles/C-answer.json","keywords":null,"cover":[],"text":"1001这道题主要的问题是需要考虑到输入错误的时候，不能继续输出，而是直接退出。 考察了scanf的返回值，以及while的判断规则，以及按位取反的操作 scanf的返回值——-它返回已成功赋值的数据项数；出错时则返回EOF； ​ （注：EOF(End Of File)是一个预定...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"祥瑞","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/04/08/L9tIA0.jpg","link":"/","description":"励志成为野生钢铁侠-稚晖君的小弟 <br /> @ <b>B站：电工渣</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}