{"title":"十一届蓝桥杯嵌入式省赛","uid":"e9d1803706b9032e2ca68eddf6b43194","slug":"十一届蓝桥杯嵌入式省赛","date":"2021-12-04T07:49:03.000Z","updated":"2022-04-09T09:25:48.616Z","comments":true,"path":"api/articles/十一届蓝桥杯嵌入式省赛.json","keywords":null,"cover":"https://z3.ax1x.com/2021/11/22/IzTdmR.jpg","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>由于本人乃菜鸡，而且这个项目只是我拿来给自己练习的，所以并没有想过做教学使用，大家可以参考一下，如果各位大佬垂阅，可以给出一下建议，我将不甚感激。</p>\n<p>之前些32代码都是全部放到main.c里面，这次是第一次把主要的程序都放到其他.c中，然后调用，这样逻辑是会比较清晰的，而且以后和别人一起做项目，这样才能更好的分工和耦合，以及对接，但是我可能是因为第一次这样做吧，所以做的时候还是有点理不清，还需要进一步熟悉这种分模块的写法。</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p><img src=\"https://img-blog.csdnimg.cn/20210304150745351.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZzdmZm,size_16,color_FFFFFF,t_70#pic_center\"></p>\n<h1 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h1><p>这一年的主观题还是比较简单的，主要难点在于如何发出两个PWM波，由于规定了PWM的输出引脚，所以如果使用定时器来产生PWM波，不太好搞，生成不一样频率的PWM，然而如果使用软件模拟PWM的话，就比较简单了。</p>\n<p><a href=\"https://imgtu.com/i/ow4LPx\"><img src=\"https://s4.ax1x.com/2021/12/04/ow4LPx.jpg\" alt=\"ow4LPx.jpg\"></a></p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><h2 id=\"1-主函数模块\"><a href=\"#1-主函数模块\" class=\"headerlink\" title=\"1.主函数模块\"></a>1.主函数模块</h2><p>main.c</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"stm32f10x.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"lcd.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UI.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"key.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"stdio.h\"</span></span>\nu32 TimingDelay <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">Delay_Ms</span><span class=\"token punctuation\">(</span>u32 nTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> duty1<span class=\"token punctuation\">,</span>duty2<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">SysTick_Config</span><span class=\"token punctuation\">(</span>SystemCoreClock<span class=\"token operator\">/</span><span class=\"token number\">100000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//一次中断10us，1khz是1ms100个中断，2khz是200个中断</span>\n\t<span class=\"token function\">Key_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">Led_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">Led_all_close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ADC_Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">STM3210B_LCD_Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_Clear</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_SetBackColor</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">LCD_SetTextColor</span><span class=\"token punctuation\">(</span>Black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">Key_Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\t\t\t<span class=\"token comment\">//按键控制PWM</span>\n\t<span class=\"token function\">UUII</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\t\t\t\t  <span class=\"token comment\">//LCD显示</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">Delay_Ms</span><span class=\"token punctuation\">(</span>u32 nTime<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tTimingDelay <span class=\"token operator\">=</span> nTime<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>TimingDelay <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"2-显示和adc配置模块\"><a href=\"#2-显示和adc配置模块\" class=\"headerlink\" title=\"2.显示和adc配置模块\"></a>2.显示和adc配置模块</h2><p>adc.c</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"lcd.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UI.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"stdio.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"stm32f10x.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"key.h\"</span></span>\n<span class=\"token keyword\">char</span> read<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> ADC_Flag<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> flag_key_1<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> flag_key_4<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> Mode<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> UI_q<span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\">//切换数据显示或者参数显示</span>\n<span class=\"token keyword\">int</span> duty1<span class=\"token punctuation\">,</span>duty2<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">UUII</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flag_key_1<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>flag_key_4<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">LCD_DisplayStringLine</span><span class=\"token punctuation\">(</span>Line0<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token string\">\"        Data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>read<span class=\"token punctuation\">,</span><span class=\"token string\">\"      V: %.2fv\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">Read_ADC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3.3</span><span class=\"token operator\">/</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_DisplayStringLine</span><span class=\"token punctuation\">(</span>Line3<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>read<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_DisplayStringLine</span><span class=\"token punctuation\">(</span>Line6<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token string\">\"      Mode: AUTO\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\tduty1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">Read_ADC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tduty2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">Read_ADC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//现在的adc输出的是真实电压的10/3.3倍，所以可以可以直接赋值</span>\n\t\t\t\n\t\t\t\n\t\t\t\t<span class=\"token function\">Led_all_close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">GPIO_ResetBits</span><span class=\"token punctuation\">(</span>GPIOC<span class=\"token punctuation\">,</span>GPIO_Pin_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">GPIO_SetBits</span><span class=\"token punctuation\">(</span>GPIOD<span class=\"token punctuation\">,</span>GPIO_Pin_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">GPIO_ResetBits</span><span class=\"token punctuation\">(</span>GPIOD<span class=\"token punctuation\">,</span>GPIO_Pin_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">LCD_DisplayStringLine</span><span class=\"token punctuation\">(</span>Line0<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token string\">\"        Data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>read<span class=\"token punctuation\">,</span><span class=\"token string\">\"      V: %.2fv\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">Read_ADC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3.3</span><span class=\"token operator\">/</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_DisplayStringLine</span><span class=\"token punctuation\">(</span>Line3<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>read<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_DisplayStringLine</span><span class=\"token punctuation\">(</span>Line6<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token string\">\"      Mode: MANU\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\t\t<span class=\"token function\">Led_all_close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">GPIO_ResetBits</span><span class=\"token punctuation\">(</span>GPIOC<span class=\"token punctuation\">,</span>GPIO_Pin_9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">GPIO_SetBits</span><span class=\"token punctuation\">(</span>GPIOD<span class=\"token punctuation\">,</span>GPIO_Pin_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">GPIO_ResetBits</span><span class=\"token punctuation\">(</span>GPIOD<span class=\"token punctuation\">,</span>GPIO_Pin_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\n\t\t\t\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\tUI_q<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>flag_key_4<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t\t<span class=\"token comment\">//自动模式</span>\n\t\t\t\n\t\tduty1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">Read_ADC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tduty2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">Read_ADC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"token comment\">//手动模式</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>RB2 <span class=\"token operator\">==</span> KEY_ON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">LCD_Clear</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tduty1<span class=\"token operator\">=</span>duty1<span class=\"token operator\">+</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>duty1<span class=\"token operator\">></span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>duty1<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n\t\t\t\n\t\n\t<span class=\"token punctuation\">&#125;</span>\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>RB3 <span class=\"token operator\">==</span> KEY_ON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">LCD_Clear</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tduty2<span class=\"token operator\">=</span>duty2<span class=\"token operator\">+</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>duty2<span class=\"token operator\">></span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>duty2<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\t\n\t\t\n\t\t\t\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token function\">LCD_DisplayStringLine</span><span class=\"token punctuation\">(</span>Line0<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token string\">\"        Para\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>read<span class=\"token punctuation\">,</span><span class=\"token string\">\"        PA6:%d   \"</span><span class=\"token punctuation\">,</span>duty1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_DisplayStringLine</span><span class=\"token punctuation\">(</span>Line3<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>read<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>read<span class=\"token punctuation\">,</span><span class=\"token string\">\"        PA7:%d   \"</span><span class=\"token punctuation\">,</span>duty2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">LCD_DisplayStringLine</span><span class=\"token punctuation\">(</span>Line6<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>read<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tUI_q<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>UI_q <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\t\n\t\n\t<span class=\"token punctuation\">&#125;</span>\n\t\n\t\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token function\">Read_ADC</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">float</span> ADC_VALUE<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">ADC_SoftwareStartConvCmd</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">,</span>ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tADC_VALUE <span class=\"token operator\">=</span> <span class=\"token function\">ADC_GetConversionValue</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token operator\">/</span><span class=\"token number\">0xfff</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> ADC_VALUE<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ADC_Config</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tGPIO_InitTypeDef GPIO_InitStructure<span class=\"token punctuation\">;</span>\n\tADC_InitTypeDef ADC_InitStructure<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">RCC_APB2PeriphClockCmd</span><span class=\"token punctuation\">(</span>RCC_APB2Periph_ADC1<span class=\"token punctuation\">,</span>ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">RCC_APB2PeriphClockCmd</span><span class=\"token punctuation\">(</span>RCC_APB2Periph_GPIOB<span class=\"token punctuation\">,</span>ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//PB0-ADC channel 8</span>\n\tGPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> GPIO_Pin_0<span class=\"token punctuation\">;</span>\n\tGPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_AIN<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>GPIOB<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>GPIO_InitStructure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// ADC1 工作模式配置</span>\n\tADC_InitStructure<span class=\"token punctuation\">.</span>ADC_Mode <span class=\"token operator\">=</span> ADC_Mode_Independent<span class=\"token punctuation\">;</span>  \n\tADC_InitStructure<span class=\"token punctuation\">.</span>ADC_ScanConvMode <span class=\"token operator\">=</span> DISABLE<span class=\"token punctuation\">;</span>\n\tADC_InitStructure<span class=\"token punctuation\">.</span>ADC_ContinuousConvMode <span class=\"token operator\">=</span> DISABLE<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//单次转换</span>\n\tADC_InitStructure<span class=\"token punctuation\">.</span>ADC_ExternalTrigConv <span class=\"token operator\">=</span> ADC_ExternalTrigConv_None<span class=\"token punctuation\">;</span>\n\tADC_InitStructure<span class=\"token punctuation\">.</span>ADC_DataAlign <span class=\"token operator\">=</span> ADC_DataAlign_Right<span class=\"token punctuation\">;</span>\n\tADC_InitStructure<span class=\"token punctuation\">.</span>ADC_NbrOfChannel <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ADC_Init</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ADC_InitStructure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ADC_RegularChannelConfig</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">,</span> ADC_Channel_8<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> ADC_SampleTime_13Cycles5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n\n\t<span class=\"token function\">ADC_Cmd</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n\t<span class=\"token function\">ADC_ResetCalibration</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">/* Check the end of ADC1 reset calibration register */</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">ADC_GetResetCalibrationStatus</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ADC_StartCalibration</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">/* Check the end of ADC1 calibration */</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">ADC_GetCalibrationStatus</span><span class=\"token punctuation\">(</span>ADC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3、按键-amp-LED配置\"><a href=\"#3、按键-amp-LED配置\" class=\"headerlink\" title=\"3、按键&amp;LED配置\"></a>3、按键&amp;LED配置</h2><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"key.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"stm32f10x.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"lcd.h\"</span></span>\n<span class=\"token keyword\">int</span> flag_key_1<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> flag_key_4<span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">uint16_t</span> Channel2Pulse <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Channel3Pulse <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Key_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\tGPIO_InitTypeDef GPIO_InitStructure<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">RCC_APB2PeriphClockCmd</span><span class=\"token punctuation\">(</span>RCC_APB2Periph_GPIOA<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">RCC_APB2PeriphClockCmd</span><span class=\"token punctuation\">(</span>RCC_APB2Periph_GPIOB<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t\t<span class=\"token comment\">//B1、B2按键引脚配置</span>\n    GPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> GPIO_Pin_0 <span class=\"token operator\">|</span> GPIO_Pin_8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span>\n    GPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_IPU<span class=\"token punctuation\">;</span>\n    GPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Speed <span class=\"token operator\">=</span> GPIO_Speed_10MHz<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>GPIOA<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>GPIO_InitStructure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//B3、B4按键引脚配置</span>\n    GPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> GPIO_Pin_1 <span class=\"token operator\">|</span> GPIO_Pin_2<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>GPIOB<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>GPIO_InitStructure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t\tGPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> GPIO_Pin_6 <span class=\"token operator\">|</span> GPIO_Pin_7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span>\n    GPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_Out_PP<span class=\"token punctuation\">;</span>\n    GPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Speed <span class=\"token operator\">=</span> GPIO_Speed_10MHz<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>GPIOA<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>GPIO_InitStructure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token class-name\">uint16_t</span> <span class=\"token function\">Key_Scan</span><span class=\"token punctuation\">(</span>GPIO_TypeDef<span class=\"token operator\">*</span> GPIOx<span class=\"token punctuation\">,</span><span class=\"token class-name\">uint16_t</span> GPIO_Pin<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">GPIO_ReadInputDataBit</span><span class=\"token punctuation\">(</span>GPIOx<span class=\"token punctuation\">,</span>GPIO_Pin<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> KEY_ON<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">GPIO_ReadInputDataBit</span><span class=\"token punctuation\">(</span>GPIOx<span class=\"token punctuation\">,</span>GPIO_Pin<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> KEY_ON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> KEY_ON<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token keyword\">return</span> KEY_OFF<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Key_Set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>RB1 <span class=\"token operator\">==</span> KEY_ON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">LCD_Clear</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tflag_key_1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token punctuation\">&#125;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>RB4 <span class=\"token operator\">==</span> KEY_ON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">LCD_Clear</span><span class=\"token punctuation\">(</span>White<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tflag_key_4<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token punctuation\">&#125;</span>\n\t\n\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">Led_init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\tGPIO_InitTypeDef GPIO_InitStructure<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">RCC_APB2PeriphClockCmd</span><span class=\"token punctuation\">(</span>RCC_APB2Periph_GPIOD<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">RCC_APB2PeriphClockCmd</span><span class=\"token punctuation\">(</span>RCC_APB2Periph_GPIOB<span class=\"token punctuation\">,</span> ENABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t\t<span class=\"token comment\">//LED引脚配置</span>\n    GPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> GPIO_Pin_8<span class=\"token operator\">|</span> GPIO_Pin_9<span class=\"token operator\">|</span> GPIO_Pin_10<span class=\"token operator\">|</span> GPIO_Pin_11<span class=\"token operator\">|</span> GPIO_Pin_12<span class=\"token operator\">|</span> GPIO_Pin_13<span class=\"token operator\">|</span> GPIO_Pin_14<span class=\"token operator\">|</span> GPIO_Pin_15<span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span>\n    GPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Mode <span class=\"token operator\">=</span> GPIO_Mode_Out_PP<span class=\"token punctuation\">;</span>\n    GPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Speed <span class=\"token operator\">=</span> GPIO_Speed_10MHz<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>GPIOC<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>GPIO_InitStructure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//锁存器引脚</span>\n    GPIO_InitStructure<span class=\"token punctuation\">.</span>GPIO_Pin <span class=\"token operator\">=</span> GPIO_Pin_2<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">GPIO_Init</span><span class=\"token punctuation\">(</span>GPIOD<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>GPIO_InitStructure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">&#125;</span>\t\t\t\t\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Led_all_close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t   <span class=\"token function\">GPIO_SetBits</span><span class=\"token punctuation\">(</span>GPIOC<span class=\"token punctuation\">,</span>GPIO_Pin_8<span class=\"token operator\">|</span> GPIO_Pin_9<span class=\"token operator\">|</span> GPIO_Pin_10<span class=\"token operator\">|</span> GPIO_Pin_11<span class=\"token operator\">|</span> GPIO_Pin_12<span class=\"token operator\">|</span> GPIO_Pin_13<span class=\"token operator\">|</span> GPIO_Pin_14<span class=\"token operator\">|</span> GPIO_Pin_15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t   <span class=\"token function\">GPIO_SetBits</span><span class=\"token punctuation\">(</span>GPIOD<span class=\"token punctuation\">,</span>GPIO_Pin_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">GPIO_ResetBits</span><span class=\"token punctuation\">(</span>GPIOD<span class=\"token punctuation\">,</span>GPIO_Pin_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4、systick中断模拟PWM\"><a href=\"#4、systick中断模拟PWM\" class=\"headerlink\" title=\"4、systick中断模拟PWM\"></a>4、systick中断模拟PWM</h2><h3 id=\"分频比\"><a href=\"#分频比\" class=\"headerlink\" title=\"分频比\"></a>分频比</h3><p>首先设置systick中断函数多久发送的周期，这个函数的形参数，是分频比</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token function\">SysTick_Config</span><span class=\"token punctuation\">(</span>SystemCoreClock<span class=\"token operator\">/</span><span class=\"token number\">100000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>$$<br>中断频率=主频率/分频比<br>$$</p>\n<p>$$<br>=SystemCoreClock      /     (SystemCoreClock/100000)</p>\n<p>=100000HZ</p>\n<p>T=10us<br>$$</p>\n<p>这样题目需要的1KHZ，即周期为1ms的PWM，和走起为500us的PWM就都能得到了。</p>\n<h3 id=\"中断函数\"><a href=\"#中断函数\" class=\"headerlink\" title=\"中断函数\"></a>中断函数</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"stm32f10x_it.h\"</span></span>\n<span class=\"token keyword\">int</span> cnt1<span class=\"token punctuation\">,</span>cnt2<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">extern</span> u32 TimingDelay<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">extern</span> <span class=\"token keyword\">int</span> duty1<span class=\"token punctuation\">,</span>duty2<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">SysTick_Handler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\tcnt1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\tcnt2<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\tTimingDelay<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cnt1<span class=\"token operator\">&lt;</span>duty1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">GPIO_SetBits</span><span class=\"token punctuation\">(</span>GPIOA<span class=\"token punctuation\">,</span>GPIO_Pin_6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cnt1<span class=\"token operator\">></span>duty1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">GPIO_ResetBits</span><span class=\"token punctuation\">(</span>GPIOA<span class=\"token punctuation\">,</span>GPIO_Pin_6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cnt1<span class=\"token operator\">==</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\tcnt1<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cnt2<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>duty2<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\n\t\t<span class=\"token function\">GPIO_SetBits</span><span class=\"token punctuation\">(</span>GPIOA<span class=\"token punctuation\">,</span>GPIO_Pin_7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cnt2<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>duty2<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\n\t\t<span class=\"token function\">GPIO_ResetBits</span><span class=\"token punctuation\">(</span>GPIOA<span class=\"token punctuation\">,</span>GPIO_Pin_7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cnt2<span class=\"token operator\">==</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\tcnt2<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><h3 id=\"初始状态\"><a href=\"#初始状态\" class=\"headerlink\" title=\"初始状态\"></a>初始状态</h3><p><a href=\"https://imgtu.com/i/owHDMV\"><img src=\"https://s4.ax1x.com/2021/12/04/owHDMV.md.jpg\" alt=\"owHDMV.md.jpg\"></a></p>\n<p><a href=\"https://imgtu.com/i/owH5M6\"><img src=\"https://s4.ax1x.com/2021/12/04/owH5M6.md.jpg\" alt=\"owH5M6.md.jpg\"></a></p>\n<h3 id=\"波形\"><a href=\"#波形\" class=\"headerlink\" title=\"波形\"></a>波形</h3><p><a href=\"https://imgtu.com/i/owbZQ0\"><img src=\"https://s4.ax1x.com/2021/12/04/owbZQ0.md.jpg\" alt=\"owbZQ0.md.jpg\"></a></p>\n<h1 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h1><p>这次的题目还是比较简单的，难点就在与如何产生两个不同频率的PWM，如果只想到定时器产生PWM的话，由于题目规定的两个PWM的引脚是同一个定时器的两个端口，所以要设置成不同频率还是有点难度的，但如果软件模拟PWM，还是比较简单的。除此之外，这道题几乎没有难度，个人需要提升的点在于：需要行一步熟悉各个模块的配置过程。因为在正式比赛的时候是没有例程给你使用的。</p>\n","text":"前言由于本人乃菜鸡，而且这个项目只是我拿来给自己练习的，所以并没有想过做教学使用，大家可以参考一下，如果各位大佬垂阅，可以给出一下建议，我将不甚感激。 之前些32代码都是全部放到main.c里面，这次是第一次把主要的程序都放到其他.c中，然后调用，这样逻辑是会比较清晰的，而且以后...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"比赛项目","slug":"比赛项目","count":3,"path":"api/categories/比赛项目.json"}],"tags":[{"name":"stm32","slug":"stm32","count":2,"path":"api/tags/stm32.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">题目</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%9E%90\"><span class=\"toc-text\">分析</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E4%B8%BB%E5%87%BD%E6%95%B0%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">1.主函数模块</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%98%BE%E7%A4%BA%E5%92%8Cadc%E9%85%8D%E7%BD%AE%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">2.显示和adc配置模块</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E6%8C%89%E9%94%AE-amp-LED%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">3、按键&amp;LED配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81systick%E4%B8%AD%E6%96%AD%E6%A8%A1%E6%8B%9FPWM\"><span class=\"toc-text\">4、systick中断模拟PWM</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E9%A2%91%E6%AF%94\"><span class=\"toc-text\">分频比</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E6%96%AD%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">中断函数</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">结果</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%A7%8B%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">初始状态</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%A2%E5%BD%A2\"><span class=\"toc-text\">波形</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93%EF%BC%9A\"><span class=\"toc-text\">总结：</span></a></li></ol>","author":{"name":"祥瑞","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/04/08/L9tIA0.jpg","link":"/","description":"励志成为野生钢铁侠-稚晖君的小弟 <br /> @ <b>B站：电工渣</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"C++核心编程","uid":"67977ad6f38d74e3fc06a55d029d9a0b","slug":"C++核心编程","date":"2021-12-08T14:01:15.000Z","updated":"2021-12-08T14:08:28.042Z","comments":true,"path":"api/articles/C++核心编程.json","keywords":null,"cover":[],"text":"C++核心编程PS:转载于“黑马程序员”！！！！！！仅因为个人原因，想随时查看相关资料而上传到个人博客的的。😂🤣🥓🥩🍔👼👲吧🤴🌮🍗🍩🥣🍨🍙🍮🧊🍻🥂🍽🍸🥢🏺🍇👨‍🦱👨‍🦳🕵️‍♀️🌮🧀🧈🌮🍙🍥🥧本阶段主要针对C++==面向对象==编程技术做详细讲解，探讨C++中的核心和精髓。 1 内存分区模型C+...","link":"","photos":[],"count_time":{"symbolsCount":"64k","symbolsTime":"58 mins."},"categories":[{"name":"C++","slug":"C","count":1,"path":"api/categories/C.json"}],"tags":[{"name":"记录","slug":"记录","count":3,"path":"api/tags/记录.json"}],"author":{"name":"祥瑞","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/04/08/L9tIA0.jpg","link":"/","description":"励志成为野生钢铁侠-稚晖君的小弟 <br /> @ <b>B站：电工渣</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"数码管动态显示（VHDL）","uid":"e025b4b43a23185465e9613af8a1c518","slug":"数码管动态显示(VHDL)","date":"2021-12-01T13:35:17.000Z","updated":"2021-12-19T08:23:02.761Z","comments":true,"path":"api/articles/数码管动态显示(VHDL).json","keywords":null,"cover":[],"text":"VHDL动态显示4位数码管电路我这里的实验室通过拨码开关计数，然后通过数码管来显示，并没有对按键进行消抖处理。 一、动态数码管是什么？实际上很多两个以上的数码管都是动态数码管，设计成这样的真正目的是为了节约硬件资源，使用少量的引脚就可以点亮多个数码管。 多位数码管的数据端口实际上...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"课程学习","slug":"课程学习","count":6,"path":"api/categories/课程学习.json"}],"tags":[{"name":"FPGA","slug":"FPGA","count":2,"path":"api/tags/FPGA.json"}],"author":{"name":"祥瑞","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/04/08/L9tIA0.jpg","link":"/","description":"励志成为野生钢铁侠-稚晖君的小弟 <br /> @ <b>B站：电工渣</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}